import{_ as i,c as a,o as e,aA as t}from"./chunks/framework.wd9KZQz2.js";const c=JSON.parse('{"title":"API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),n={name:"api.md"};function l(r,s,o,h,p,k){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="API-Reference" tabindex="-1">API Reference <a class="header-anchor" href="#API-Reference" aria-label="Permalink to &quot;API Reference {#API-Reference}&quot;">​</a></h1><h2 id="Configuration" tabindex="-1">Configuration <a class="header-anchor" href="#Configuration" aria-label="Permalink to &quot;Configuration {#Configuration}&quot;">​</a></h2><h3 id="AnalyticsConfig" tabindex="-1"><code>AnalyticsConfig</code> <a class="header-anchor" href="#AnalyticsConfig" aria-label="Permalink to &quot;\`AnalyticsConfig\` {#AnalyticsConfig}&quot;">​</a></h3><p>The main configuration struct for setting up your GitHub analysis.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AnalyticsConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    targets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{String}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    auth_token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    output_dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;github_analysis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log_level </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Logging</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Info,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fetch_contributors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fetch_commit_history</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fetch_pull_requests</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    generate_plots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    generate_csv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    generate_markdown</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Parameters:</strong></p><ul><li><p><code>targets</code>: Vector of GitHub usernames/organizations or repository names to analyze</p></li><li><p><code>auth_token</code>: GitHub personal access token for API access</p></li><li><p><code>output_dir</code>: Directory where results will be saved</p></li><li><p><code>log_level</code>: Logging level for output verbosity</p></li><li><p><code>fetch_contributors</code>: Whether to fetch contributor data</p></li><li><p><code>fetch_commit_history</code>: Whether to fetch commit history</p></li><li><p><code>fetch_pull_requests</code>: Whether to fetch pull request data</p></li><li><p><code>generate_plots</code>: Whether to generate visualization plots</p></li><li><p><code>generate_csv</code>: Whether to export data as CSV files</p></li><li><p><code>generate_markdown</code>: Whether to generate markdown reports</p></li></ul><h2 id="Main-Functions" tabindex="-1">Main Functions <a class="header-anchor" href="#Main-Functions" aria-label="Permalink to &quot;Main Functions {#Main-Functions}&quot;">​</a></h2><h3 id="run_analysisconfig::AnalyticsConfig" tabindex="-1"><code>run_analysis(config::AnalyticsConfig)</code> <a class="header-anchor" href="#run_analysisconfig::AnalyticsConfig" aria-label="Permalink to &quot;\`run_analysis(config::AnalyticsConfig)\` {#run_analysisconfig::AnalyticsConfig}&quot;">​</a></h3><p>Main function to execute the GitHub analytics pipeline.</p><p><strong>Returns:</strong> <code>ProcessedData</code> struct containing all analyzed results</p><h3 id="generate_markdown_summaryprocessed_data,-config,-logger" tabindex="-1"><code>generate_markdown_summary(processed_data, config, logger)</code> <a class="header-anchor" href="#generate_markdown_summaryprocessed_data,-config,-logger" aria-label="Permalink to &quot;\`generate_markdown_summary(processed_data, config, logger)\` {#generate_markdown_summaryprocessed_data,-config,-logger}&quot;">​</a></h3><p>Generate comprehensive markdown reports from processed data.</p><h3 id="generate_csv_reportsprocessed_data,-config,-logger" tabindex="-1"><code>generate_csv_reports(processed_data, config, logger)</code> <a class="header-anchor" href="#generate_csv_reportsprocessed_data,-config,-logger" aria-label="Permalink to &quot;\`generate_csv_reports(processed_data, config, logger)\` {#generate_csv_reportsprocessed_data,-config,-logger}&quot;">​</a></h3><p>Export data to CSV format for further analysis.</p><h2 id="Data-Structures" tabindex="-1">Data Structures <a class="header-anchor" href="#Data-Structures" aria-label="Permalink to &quot;Data Structures {#Data-Structures}&quot;">​</a></h2><h3 id="ProcessedData" tabindex="-1"><code>ProcessedData</code> <a class="header-anchor" href="#ProcessedData" aria-label="Permalink to &quot;\`ProcessedData\` {#ProcessedData}&quot;">​</a></h3><p>Container for all processed analytics data including:</p><ul><li><p>Repository metrics</p></li><li><p>Issue analysis</p></li><li><p>Pull request metrics</p></li><li><p>Contributor summaries</p></li><li><p>Language distribution</p></li><li><p>Commit activity data</p></li></ul><h3 id="RepositoryMetrics" tabindex="-1"><code>RepositoryMetrics</code> <a class="header-anchor" href="#RepositoryMetrics" aria-label="Permalink to &quot;\`RepositoryMetrics\` {#RepositoryMetrics}&quot;">​</a></h3><p>Individual repository statistics including stars, forks, issues, and basic metadata.</p><h3 id="PullRequestMetrics" tabindex="-1"><code>PullRequestMetrics</code> <a class="header-anchor" href="#PullRequestMetrics" aria-label="Permalink to &quot;\`PullRequestMetrics\` {#PullRequestMetrics}&quot;">​</a></h3><p>Pull request analysis data including merge rates, review times, and status distributions.</p><h2 id="Authentication" tabindex="-1">Authentication <a class="header-anchor" href="#Authentication" aria-label="Permalink to &quot;Authentication {#Authentication}&quot;">​</a></h2><p>GitHubAnalytics.jl requires a GitHub personal access token for API access. Set this as an environment variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GITHUB_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_token_here&quot;</span></span></code></pre></div><p>Or pass it directly to the configuration:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AnalyticsConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    targets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_target&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    auth_token </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_token_here&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ... other options</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="Output-Files" tabindex="-1">Output Files <a class="header-anchor" href="#Output-Files" aria-label="Permalink to &quot;Output Files {#Output-Files}&quot;">​</a></h2><p>The package generates several types of output files:</p><ul><li><p><strong>Markdown Reports</strong>: Comprehensive analysis summaries</p></li><li><p><strong>CSV Data</strong>: Raw data for custom analysis</p></li><li><p><strong>Visualizations</strong>: PNG charts and plots</p></li><li><p><strong>JSON Data</strong>: Structured data for programmatic access</p></li></ul>`,31)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
